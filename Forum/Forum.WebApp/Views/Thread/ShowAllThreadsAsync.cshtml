@using Forum.ViewModels.ViewModels
@model IEnumerable<ThreadViewModel>

@{
    ViewData["Title"] = "ShowAllThreads";
    UserViewModel currentUser = ViewBag.CurrentUser;
    CategoryViewModel category = ViewBag.Category;
}

<h2>@category.Title</h2>

@if (Model.Count() != 0)
{
    <table class="table threads" style="width:100%; border: 1px solid #ccc">
        <thead>
            <tr>
                <th style="padding-left:1.5%">Title</th>
                <th style="text-align:center">Posts</th>
                <th style="text-align:center">Date created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ThreadViewModel thread in @Model)
            {
                <tr style="background-color: #4e5d6c">
                    <td style="width: 70%; border-bottom: 1px solid #df691a;  padding:1.5%">
                        <a asp-action="ShowPostsAsync" asp-controller="Post" asp-route-threadId="@thread.ThreadID">@thread.Title</a>
                        @if (User.IsInRole("admin"))
                        {
                            ViewData["Thread"] = thread;

                            <a class="btn btn-danger btn-xs delete-btn" style="text-decoration: none !important;" asp-action="RemoveThreadAsync" asp-controller="Thread" asp-route-threadId="@thread.ThreadID" asp-route-categoryId="@thread.CategoryID" asp-route-currentPage="@ViewBag.Page">Delete</a>
                            <button class="btn btn-warning btn-xs edit-btn" data-toggle="modal" data-target="@("#thread" + thread.ThreadID)">Edit</button>
                            <partial name="_EditThread" view-data="ViewData" />
                        }
                    </td>
                    <td style="width: 10%; border-bottom: 1px solid #df691a;  padding:1.5%; text-align:center">@thread.Posts.Count()</td>
                    <td style="width: 20%; border-bottom: 1px solid #df691a;  padding:0.9%; text-align:center">@thread.DateCreated</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (Model.Count() <= 0 && !User.Identity.IsAuthenticated)
{
    <h1 class="text-center">No Threads Yet!</h1>
}
<br />
@if (ViewBag.TotalThreads > 5)
{
    <div class="text-center">
        @for (int i = 0; i < ViewBag.TotalPages; i++)
        {
            var index = i + 1;

            if (index == ViewBag.Page + 1)
            {
                <a style="padding:0px 7px; text-decoration:underline; color:white" asp-action="ShowAllThreadsAsync" asp-controller="Thread" asp-route-categoryId="@category.CategoryID" asp-route-page="@i"><strong>@index</strong></a>
                continue;
            }
            <a style="padding:0px 7px" asp-action="ShowAllThreadsAsync" asp-controller="Thread" asp-route-categoryId="@category.CategoryID" asp-route-page="@i">@index</a>
        }
    </div>
}
<br />
@if (User.Identity.IsAuthenticated && currentUser.Suspended == false)
{
    <form asp-controller="Thread" asp-action="AddThreadAsync" method="post" style="width: 50%;" class="center-block">
        <input type="hidden" name="CategoryID" value="@category.CategoryID" />
        <div class="form-group">
            <textarea name="title" class="form-control" id="title" rows="3" placeholder="Create new thread..."></textarea>
        </div>
        <div class="form-group text-center"><button class="btn btn-primary create-btn">Create</button></div>
    </form>
}