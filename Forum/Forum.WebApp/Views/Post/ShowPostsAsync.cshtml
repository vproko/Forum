@using Forum.ViewModels.ViewModels
@model IEnumerable<PostViewModel>

@{
    ViewData["Title"] = "ShowPosts";
    UserViewModel currentUser = ViewBag.CurrentUser;

    if (currentUser != null)
    {
        ViewData["UserID"] = currentUser.Id;
    }

    ThreadViewModel thread = ViewBag.Thread;
}

<a class="category-title" asp-controller="Thread" asp-action="ShowAllThreadsAsync" asp-route-categoryId="@thread.CategoryID">@thread.Category.Title</a>
<h2>@thread.Title</h2>
<br />

@if (Model.Count() != 0)
{
    <table class="table-striped" width="100%">
        <tbody>
            @foreach (PostViewModel post in Model)
            {
                ViewData["Post"] = post;

                <tr class="post-row">
                    <td class="verticalSplit col-md-2">
                        <ul class="user-info">
                            <li>
                                <img style="border:1px solid white" src="@post.User.Avatar" />
                            </li>
                            <li>
                                <b style="color:#ffd49c">@post.User.Username</b>
                                <br />
                            </li>
                            @if (post.User.Administrator == true)
                            {
                                <li style="color:#3b97f7">
                                    <b>Administrator</b>
                                </li>
                            }
                            <li>
                                Joined: @post.User.Joined.ToShortDateString()
                            </li>
                            @if (post.User.Online)
                            {
                                <li>Online status:&nbsp;<b style="color: lightseagreen;">Online</b></li>
                            }
                            else
                            {
                                <li>Online status:&nbsp;<span style="color:#ff794d"><b>Offline</b></span></li>
                            }

                            @if (post.User.Suspended == true)
                            {
                                <li>Account:&nbsp;<span style="color:#ff794d"><b>Suspended</b></span></li>
                            }
                            else
                            {
                                <li>Account:&nbsp;<span style="color:lightseagreen"><b>Active</b></span></li>
                            }
                        </ul>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (post.User.Username != User.Identity.Name && currentUser.Suspended == false)
                            {
                                <button class="btn btn-success btn-xs pm-btn" data-toggle="modal" data-target="@("#userId" + post.User.Id)">PM</button>
                                <partial name="_PrivateMessage" view-data="ViewData" />
                            }
                        }
                    </td>
                    @if (post.Content.Contains("e3f79af2"))
                    {
                        string[] arr = post.Content.Split(new string[] { "e3f79af2" }, StringSplitOptions.None);
                        var part1 = arr[0];
                        var part2 = arr[1];
                        var part3 = arr[2];

                        <td class="content" style="width:60%"><span style="color:darkorange"><i>@part1</i></span> <br /> <span style="color:darkorange"><i><q>@part2</q></i></span> <br /> <br /> @part3 <br /></td>
                    }
                    else
                    {
                        <td class="content" style="width:60%">@post.Content</td>
                    }
                    <td class="verticalSplit col-md-2 date">Created: @post.DateCreated.ToShortDateString() @post.DateCreated.ToShortTimeString()</td>
                </tr>
                @if (User.Identity.IsAuthenticated)
                {
                    <tr class="buttons">
                        <td colspan="3" class="text-right">
                            @if (post.User.Username == User.Identity.Name || User.IsInRole("admin"))
                            {
                                <button class="btn btn-warning btn-xs edit-btn" data-toggle="modal" data-target="@("#postID" + post.PostID)">Edit</button>
                                <partial name="_EditPost" view-data="ViewData" />
                                <a class="btn btn-danger btn-xs delete-btn" asp-action="DeletePostAsync" asp-controller="Post" asp-route-postId="@post.PostID" asp-route-threadId="@post.ThreadID" asp-route-currentPage="@ViewBag.Page">Delete</a>
                            }

                            @if (User.Identity.Name != post.User.Username && currentUser.Suspended == false)
                            {
                                <button class="btn btn-primary btn-xs reply-btn" data-toggle="modal" data-target="@("#postId" + post.PostID)">Reply</button>
                                <partial name="_PostReply" view-data="ViewData" />
                            }

                            @if (post.Reported == false && !User.IsInRole("admin") && User.Identity.Name != post.User.Username && currentUser.Suspended == false)
                            {
                                <a class="btn btn-danger btn-xs report-btn" asp-action="ReportPostAsync" asp-controller="Post" asp-route-threadId="@post.ThreadID" asp-route-postId="@post.PostID" asp-route-page="@ViewBag.Page">Report</a>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    <tr class="blank-row"></tr>
                }
            }
        </tbody>
    </table>
}
else if(Model.Count() <= 0 && !User.Identity.IsAuthenticated)
{
    <h1 class="text-center">No Posts Yet!</h1>
}
<br />
@if (thread.Posts.Count() > 5)
{
    <div class="text-center">
        @for (int i = 0; i < ViewBag.TotalPages; i++)
        {
            var index = i + 1;

            if (index == ViewBag.Page + 1)
            {
                <a style="padding:0px 7px; text-decoration:underline; color:white" asp-action="ShowPostsAsync" asp-controller="Post" asp-route-threadId="@thread.ThreadID" asp-route-page="@i"><strong>@index</strong></a>
                continue;
            }
            <a style="padding:0px 7px" asp-action="ShowPostsAsync" asp-controller="Post" asp-route-threadId="@thread.ThreadID" asp-route-page="@i">@index</a>
        }
    </div>
}
<br />
@if (User.Identity.IsAuthenticated && currentUser.Suspended != true)
{
    <form asp-controller="Post" asp-action="AddPostAsync" asp-route-totalCount="@thread.Posts.Count()" method="post" style="width: 50%;" class="center-block">
        <input name="UserID" type="hidden" value="@currentUser.Id" />
        <input name="ThreadID" type="hidden" value="@thread.ThreadID" />
        <div class="form-group">
            <textarea name="Content" class="form-control" id="text" style="border-radius:7px" rows="3" placeholder="Your post..."></textarea>
        </div>
        <div class="form-group text-center"><button class="btn btn-primary post-btn">Post</button></div>
    </form>
}